name: Node.js CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build Node.js App
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Debug Current Directory
        run: |
          echo "Listing all files and directories:"
          ls -R

      - name: Set up Node.js (v23.11.0)
        uses: actions/setup-node@v3
        with:
          node-version: '23.11.0'

      - name: Navigate to Node.js App Directory
        working-directory: aimodule
        run: |
          echo "Navigating to Node.js application directory..."
          ls -R

      - name: Install Dependencies
        working-directory: aimodule
        run: npm install

      - name: Generate Prisma Client (Optional)
        working-directory: aimodule
        run: npx prisma generate

      - name: Build App
        working-directory: aimodule
        run: npm run build

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: nodejs-app
          path: aimodule

  deploy:
    name: Deploy to Server
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Download Build Artifact
        uses: actions/download-artifact@v4
        with:
          name: nodejs-app
          path: nodejs-app

      - name: Set Up SSH Key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.DEPLOY_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: Add Server to Known Hosts
        run: |
          ssh-keyscan -H ${{ secrets.DEPLOY_SERVER }} >> ~/.ssh/known_hosts

      - name: Debug Node.js Environment on Server
        env:
          DEPLOY_SERVER: ${{ secrets.DEPLOY_SERVER }}
          DEPLOY_USER: ${{ secrets.DEPLOY_USER }}
        run: |
          ssh $DEPLOY_USER@$DEPLOY_SERVER "
            echo 'Node.js Version:'
            /home/founder/.nvm/versions/node/v23.11.0/bin/node -v
            echo 'npm Version:'
            /home/founder/.nvm/versions/node/v23.11.0/bin/npm -v
          "

      - name: Deploy Node.js App to Server
        env:
          DEPLOY_SERVER: ${{ secrets.DEPLOY_SERVER }}
          DEPLOY_USER: ${{ secrets.DEPLOY_USER }}
          DEPLOY_PATH: ~/Chatbot/aimodule
        run: |
          echo "Transferring Node.js app to the server..."
          rsync -avz --delete nodejs-app/ $DEPLOY_USER@$DEPLOY_SERVER:$DEPLOY_PATH
          
          echo "Deployed successfully!"
      - name: env file
        env:
          DEPLOY_SERVER: ${{ secrets.DEPLOY_SERVER }}
          DEPLOY_USER: ${{ secrets.DEPLOY_USER }}
          DATABASE_URL: ${{ secrets.DATABASE_ENV }}
          GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}
          GOOGLE_AI_MODEL: ${{ secrets.GOOGLE_AI_MODEL }}
          DEPLOY_PATH: ~/Chatbot/aimodule
        run: |
          ssh $DEPLOY_USER@$DEPLOY_SERVER "
            cd $DEPLOY_PATH &&
            touch .env &&
            chmod 7777 .env &&
            echo $GOOGLE_API_KEY >> .env &&
            echo $GOOGLE_AI_MODEL >> .env  &&
            echo $DATABASE_URL >> .env
            "
          

      - name: Start Node.js App on Server
        env:
          DEPLOY_SERVER: ${{ secrets.DEPLOY_SERVER }}
          DEPLOY_USER: ${{ secrets.DEPLOY_USER }}
          DEPLOY_PATH: ~/Chatbot/aimodule
        run: |
          echo "Starting the Node.js app on the server..."
          ssh -t $DEPLOY_USER@$DEPLOY_SERVER "
            echo 'Conexiune stabilita'
            cd $DEPLOY_PATH &&
            pkill -f 'node' || true &&
            /home/founder/.nvm/versions/node/v23.11.0/bin/npm install && 
            /home/founder/.nvm/versions/node/v23.11.0/bin/npx prisma generate && 
            /home/founder/.nvm/versions/node/v23.11.0/bin/npm run start:prod & 
            "
        
      
